/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package romanow.cnc.m3d;

import romanow.cnc.commands.Command;
import romanow.cnc.commands.CommandLayer;
import romanow.cnc.commands.CommandLine;
import romanow.cnc.commands.USBCommandFactory;
import romanow.cnc.settings.WorkSpace;
import romanow.cnc.stl.STLLine;
import romanow.cnc.stl.STLPoint2D;
import romanow.cnc.utils.I_Notify;
import romanow.cnc.utils.UNIException;
import romanow.cnc.utils.Utils;
import romanow.cnc.Values;
import romanow.cnc.controller.*;

import javax.swing.*;
import java.util.ArrayList;

/**
 *
 * @author romanow
 */
public class M3DSequencer extends javax.swing.JFrame {
    private ArrayList<Command> cList;
    private I_Notify notify;
    private USBProtocol usb;
    private USBBack back;
    private USBCommandFactory factoryFull = new USBCommandFactory();
    /**
     * Creates new form M3DSequencer
     */
    /** Перехватчик обратных вызовов USB */

    private void initView(){
        while(Sequence.getItemCount()!=0)
            Sequence.remove(0);               //??????????????????????????????????
        for (Command cmd : cList)
            Sequence.addItem(cmd.toView());
        ArrayList<String> ss = factoryFull.commandList();
        for(int i=0;i<ss.size();i++)
            CmdList.addItem(ss.get(i));
        }

    public M3DSequencer(I_Notify notify0,boolean udp) {
        usb = new USBProtocol(udp ? new USBUDPEmulator() : new USBLineController());
        notify = notify0;
        initComponents();
        this.setBounds(150,150,400,350);
        setTitle("Секвенсор команд");
        cList = WorkSpace.ws().commands;
        СommandType.removeAll();
        СommandType.addItem(new CommandLine().name());
        СommandType.addItem(new CommandLayer().name());
        //cList.add(new CommandLayer(WorkSpace.ws().general.VerticalStep.getVal()));
        initView();
        back = new USBNotify(factoryFull,notify) {
            @Override
            public void onSuccess(int code, int[] data) {
                notify.info(String.format("Выполнено code=%4x",code));
                if (code==USBCodes.GetAvailMemory)
                    notify.info("Памяти команд "+data[1]+" слов");
                if (code==USBCodes.ReadMessages || code==USBCodes.ReadLog){
                    int count = data[1];
                    notify.info("Прочитано "+count+" строки");
                    String ss[] = new String[0];
                    try {
                        ss = Utils.IntArrayToStrings(data);
                    } catch (UNIException e) {
                        notify.notify(Values.fatal,e.toString());
                        return;
                    }
                    for(String zz : ss){
                        notify.info(zz);
                        }
                    }
                }
            };
        try {
            usb.init();
            } catch (UNIException e) { notify.notify(Values.error,e.toString()); }
        }

    private double getDouble(JTextField txt) throws UNIException{
        double vv;
        try {
            vv = Double.parseDouble(txt.getText());
            if (Math.abs(vv)>=1) {
                throw UNIException.user("Диапазон числа >1");
                }
            } catch (Exception ee){ throw UNIException.user("Формат вещественного числа ????");}
            return vv;
        }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        list1 = new java.awt.List();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        Append = new javax.swing.JButton();
        Remove = new javax.swing.JButton();
        Pause = new javax.swing.JButton();
        Start = new javax.swing.JButton();
        X1 = new javax.swing.JTextField();
        Y1 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        Counter = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        Sequence = new java.awt.Choice();
        СommandType = new java.awt.Choice();
        CmdList = new java.awt.Choice();
        jButton2 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        X2 = new javax.swing.JTextField();
        Y2 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(null);

        jLabel2.setText("Y1");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(270, 160, 30, 14);

        jLabel3.setText("Повторений");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(30, 130, 80, 14);

        Append.setText("Добавить");
        Append.setPreferredSize(new java.awt.Dimension(83, 25));
        Append.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AppendActionPerformed(evt);
            }
        });
        getContentPane().add(Append);
        Append.setBounds(140, 220, 100, 25);

        Remove.setText("Удалить");
        Remove.setPreferredSize(new java.awt.Dimension(77, 25));
        Remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoveActionPerformed(evt);
            }
        });
        getContentPane().add(Remove);
        Remove.setBounds(260, 220, 90, 25);

        Pause.setText("Стоп");
        Pause.setPreferredSize(new java.awt.Dimension(93, 25));
        Pause.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PauseActionPerformed(evt);
            }
        });
        getContentPane().add(Pause);
        Pause.setBounds(20, 220, 90, 25);

        Start.setText("Старт");
        Start.setPreferredSize(new java.awt.Dimension(63, 25));
        Start.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StartActionPerformed(evt);
            }
        });
        getContentPane().add(Start);
        Start.setBounds(20, 180, 90, 25);

        X1.setText("-0.001");
        getContentPane().add(X1);
        X1.setBounds(170, 150, 60, 25);

        Y1.setText("-0.001");
        getContentPane().add(Y1);
        Y1.setBounds(290, 150, 60, 25);

        jLabel4.setText("Секвенция");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(130, 70, 90, 14);

        jLabel5.setText("X1");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(150, 160, 30, 14);

        Counter.setText("0");
        getContentPane().add(Counter);
        Counter.setBounds(30, 150, 70, 25);

        jLabel8.setText("Новая команда");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(130, 20, 110, 14);

        jLabel6.setText("Прямое исполнение");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(20, 250, 150, 14);

        jButton1.setText("Выполнить");
        jButton1.setMaximumSize(new java.awt.Dimension(89, 30));
        jButton1.setMinimumSize(new java.awt.Dimension(89, 30));
        jButton1.setPreferredSize(new java.awt.Dimension(89, 25));
        jButton1.setRequestFocusEnabled(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(260, 270, 110, 25);

        Sequence.setBackground(new java.awt.Color(240, 240, 240));
        getContentPane().add(Sequence);
        Sequence.setBounds(20, 90, 340, 20);

        СommandType.setBackground(new java.awt.Color(240, 240, 240));
        getContentPane().add(СommandType);
        СommandType.setBounds(130, 40, 230, 20);

        CmdList.setBackground(new java.awt.Color(240, 240, 240));
        getContentPane().add(CmdList);
        CmdList.setBounds(20, 270, 230, 20);

        jButton2.setText("Поток");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(20, 40, 90, 23);

        jLabel7.setText("Y2");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(270, 190, 30, 14);

        X2.setText("0.001");
        getContentPane().add(X2);
        X2.setBounds(170, 180, 60, 25);

        Y2.setText("0.001");
        getContentPane().add(Y2);
        Y2.setBounds(290, 180, 60, 25);

        jLabel9.setText("X2");
        getContentPane().add(jLabel9);
        jLabel9.setBounds(150, 190, 30, 14);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void PauseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PauseActionPerformed
        //usb.StopPrintBlockRepeat(back);
    }//GEN-LAST:event_PauseActionPerformed

    private void StartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StartActionPerformed
        DataBuffer out = new DataBuffer(usb,2);
        for (Command cc : cList){
            if (!cc.canPut(out)){
                notify.notify(Values.error,"Слишком много команд");
                return;
                }
            cc.toDataBuffer(out);
            }
        int data[] = out.getDataForCommand();
        try {
            String ss = Counter.getText();
            data[1] = Integer.parseInt(ss);
            } catch(Exception ee){
                notify.notify(Values.error,"Числовое значение повторений ???");
                return;
                }
        //usb.StartPrintBlockRepeat(data,back);
    }//GEN-LAST:event_StartActionPerformed

    private void AppendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AppendActionPerformed
        try {
            Command cmd = factoryFull.getCommand(СommandType.getSelectedItem().toString());
            if (cmd instanceof CommandLine){
                STLLine line = new STLLine(new STLPoint2D(getDouble(X1),getDouble(Y1)),new STLPoint2D(getDouble(X2),getDouble(Y2)));
                cmd = new CommandLine(line);
                }
            if (cmd instanceof CommandLayer){
                CommandLayer lr = new CommandLayer();
                lr.step(WorkSpace.ws().global().model.VerticalStep.getVal());
                cmd = lr;
                }
            cList.add(cmd);
            initView();
            } catch (UNIException e) { notify.notify(Values.error,e.getMessage()); }
        }//GEN-LAST:event_AppendActionPerformed

    private void RemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoveActionPerformed
        int size = cList.size();
        int idx = Sequence.getSelectedIndex();
        if (idx>=size)
            return;
        cList.remove(idx);
        initView();
    }//GEN-LAST:event_RemoveActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        try {
            usb.close();
            } catch (UNIException e) { notify.notify(Values.error,e.toString()); }  
    }//GEN-LAST:event_formWindowClosing

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String cc = (String)CmdList.getSelectedItem();
        try {
            Command xx = factoryFull.getCommand(cc);
            if (xx==null) {
                notify.log( "Не найдена команда:" + CmdList.getSelectedItem());
                return;
            }
            new Thread(()->{
                int out[] = xx.toIntArray();
                usb.oneCommand(out,back);
                }).start();
        } catch (UNIException e) { notify.log("Ошибка генерации команды: "+cc); }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int vv=0;
        try {
            String ss = Counter.getText();
            vv = Integer.parseInt(ss);
            if (vv==0){
                notify.notify(Values.error,"Нулевое количество циклов повторений ???");
                return;
                }
            } catch(Exception ee){
                notify.notify(Values.error,"Числовое значение повторений ???");
                return;
                }
        while (vv-- != 0) {
            for (Command cc : cList) {
                usb.oneCommand(cc.toIntArray(), back);
                }
            }
    }//GEN-LAST:event_jButton2ActionPerformed



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Append;
    private java.awt.Choice CmdList;
    private javax.swing.JTextField Counter;
    private javax.swing.JButton Pause;
    private javax.swing.JButton Remove;
    private java.awt.Choice Sequence;
    private javax.swing.JButton Start;
    private javax.swing.JTextField X1;
    private javax.swing.JTextField X2;
    private javax.swing.JTextField Y1;
    private javax.swing.JTextField Y2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private java.awt.List list1;
    private java.awt.Choice СommandType;
    // End of variables declaration//GEN-END:variables
}
