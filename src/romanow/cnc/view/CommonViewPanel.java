/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package romanow.cnc.view;

import romanow.cnc.Values;
import romanow.cnc.m3d.ViewAdapter;
import romanow.cnc.settings.Settings;
import romanow.cnc.settings.WorkSpace;
import romanow.cnc.stl.STLLine;
import romanow.cnc.utils.Events;

import javax.swing.*;
import java.awt.*;
import java.util.ArrayList;

/**
 *
 * @author Admin
 */
public class CommonViewPanel extends BasePanel {
    private double ddxy=0;
    public JPanel fld(){ return FLD; }
    /**
     * Creates new form CommonViewPanel
     */
    public CommonViewPanel(BaseFrame base) {
        super(base);
        initComponents();
        WorkSpace.ws().preview(FLD);
        }
    @Override
    public String getName() {
        return "Просмотр";
        }
    @Override
    public int modeMask() {
        return Values.PanelCommonView;
        }
    @Override
    public boolean modeEnabled() {
        return true;
        }
    @Override
    public void onInit(boolean on) {
        }

    @Override
    public void onClose() {
        }

    @Override
    public void refresh() {
        }
    @Override
    public void onEvent(int code, int par1, long par2, String par3, Object oo) {
        if (code== Events.GCode){
            if (par1==0 || par1==2){
                Settings set = WorkSpace.ws().global();
                double xSize = set.model.BlankWidth.getVal();
                FLD.removeAll();
                double ySize = set.model.BlankHight.getVal();
                ddxy = xSize / FLD.getWidth();
                double ddy = ySize / FLD.getHeight();
                if (ddy < ddxy)
                    ddxy = ddy;
                ddxy *= 10;
                FLD.removeAll();
                }
            if (par1==1){
                ArrayList<STLLine> lines = (ArrayList<STLLine>) oo;
                Graphics gg = FLD.getGraphics();
                gg.setColor(Color.white);
                gg.fillRect(0,0,FLD.getWidth(),FLD.getHeight());
                gg.setColor(Color.red);
                for(STLLine line : lines){
                    gg.drawLine((int)(line.one().x()*ddxy),(int)(line.one().y()*ddxy),(int)(line.two().x()*ddxy),(int)(line.two().y()*ddxy));
                    }
                }
            }
        }
    @Override
    public void shutDown() {
        }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        FLD = new javax.swing.JPanel();
        Scale = new javax.swing.JSlider();

        setLayout(null);

        FLD.setBackground(new java.awt.Color(255, 255, 255));
        FLD.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout FLDLayout = new javax.swing.GroupLayout(FLD);
        FLD.setLayout(FLDLayout);
        FLDLayout.setHorizontalGroup(
            FLDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 578, Short.MAX_VALUE)
        );
        FLDLayout.setVerticalGroup(
            FLDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 648, Short.MAX_VALUE)
        );

        add(FLD);
        FLD.setBounds(10, 10, 580, 650);

        Scale.setMinimum(-50);
        Scale.setValue(0);
        Scale.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                ScaleStateChanged(evt);
            }
        });
        add(Scale);
        Scale.setBounds(0, 670, 200, 20);
    }// </editor-fold>//GEN-END:initComponents

    private void ScaleStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_ScaleStateChanged
        double vv= Scale.getValue();
        ViewAdapter viewCommon = WorkSpace.ws().viewCommon();
        if (vv>0)
        viewCommon.mas = viewCommon.sz() * vv/10;
        else
        if (vv<0)
        viewCommon.mas = viewCommon.sz() / (-vv/10);
        else
        viewCommon.mas = viewCommon.sz();
    }//GEN-LAST:event_ScaleStateChanged




    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel FLD;
    private javax.swing.JSlider Scale;
    // End of variables declaration//GEN-END:variables
}
